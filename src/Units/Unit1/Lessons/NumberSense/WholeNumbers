import MakePage from './MakePage.js';

const MakeComponent = () => {
    
    const Intro = {
        Type: 'Default',
        Header: 'Whole Numbers',
        Intro: true,
        Text: {
            transition: 'Next',
            text: [
                `<i>By the end of this lesson, students will:</i>
                <p>Describe how various subsets of a number system are defined, and describe similarities and differences between these subsets</p>
                <p>Use patterns and number relationships to explain density, infinity, and limit as they relate to number sets</p>`,
                `<i>Students will be able to successfully:</i>
                <p>Identify whole numbers</p>
                <p>Visualize whole numbers using the number line</p>`
            ]
        },
        Image: {
            url: "Phone",
            alt: 'Phone',
            position: 'below',
            zoom: null
        },
        Audio: null
    }
    
    const Lesson1 = {
        Type: 'Default',
        Header: 'Introduction to Whole Numbers',
        Text: {
            transition: "Next",
            text: [
                "<p><b>Whole Numbers</b>, represented by <b>W</b>, are a subset of integers containing positive numbers and 0:</p>",
                "<span class='zero'>0</span><span class='numbers'>, 1, 2, 3, 4, 5, ...<span>",
                "<p>You probably recognize whole numbers as the set of numbers you learned about in elementary school.</p>",
                "<img src=https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/WholeNumbers/phone.svg width='200' style='border-radius: 20px; padding-top: 10px;' alt={alt}/><p>Once again, these numbers can be found in our everyday lives. For example, whole numbers make up the digits of your phone number!</p>"
            ]
        },
        Image: null,
        Audio: null
    }
    
    const MC = {
        Type: 'Multiple Choice',
        Header: null,
        Question: 'Which of the following is a whole number?',
        Options: [
            "-12",
            "12",
            "-3",
            "4.6"
        ],
        Answer: '12', 
        Image: null,
        Audio: null
    };

    const Lesson2 = {
        Type: 'Default',
        Header: 'Visualizing Whole Numbers on the Number Line',
        Text: {
            transition: "Next",
            text: [ 
                "<p>We were previously introduced to integers on the number line:</p>",
                {
                    Example: 'Number Line',
                    Max: 10,
                    Min: -10,
                    Step: 1,
                    Initial: 0,
                    Data: "<p>The numbers were placed <b>1 apart</b>, and contained <b>negative numbers</p>",
                },
                "<p>Now, let's take a look at whole numbers on the number line and see their differences:</p>",
                {
                    Example: 'Number Line',
                    Max: 10,
                    Min: 0,
                    Step: 1,
                    Initial: 0,
                    Data: "<p>What do you notice about the two number lines? How are they similar/different?</p>"
                },
                "<p>We can see that the numbers on this number line are also <b>separated by 1</b>. However, unlike integers, whole numbers <b>do not contain negative numbers</b>!</p>",
                {
                    Example: 'Note',
                    Content: "<p>Think deeper:</p> Do you think 0 is a negative or a positive number?",
                    Image: {
                        url: "https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/WholeNumbers/thinking.gif",
                        alt: 'stop',
                        position: 'below',
                        width: 200,
                        zoom: null
                    },
                    Text: null,
                },
            ]
        },
        Image: null,
        Audio: null
    };
    
    const Ending = {
        Type: 'Default',
        Header: 'Congrats! You made it to the end!',
        Text: null,
        Audio: null
    }
    
    // place objects in order of appearance
    const ComponentArray = [ Intro, Lesson1, MC, Lesson2, Ending ];

    return (
        <MakePage componentArray={ComponentArray} />
    );
}

export default MakeComponent;



