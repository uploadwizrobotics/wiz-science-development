import MakePage from './MakePage.js';

const MakeComponent = () => {
    
    const Intro = {
        Type: 'Default',
        Header: 'Irrational Numbers',
        Text: {
            transition: 'Next',
            text: [
                `<i>By the end of this lesson, students will:</i>
                <p>Describe how various subsets of a number system are defined, and describe similarities and differences between these subsets</p>
                <p>Use patterns and number relationships to explain density, infinity, and limit as they relate to number sets</p>`,
                `<i>Students will be able to successfully:</i>
                <p>Identify irrational numbers</p>
                <p>Visualize irrational numbers using the number line</p>`
            ]
        },
        Image: { 
            url: 'https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/venn_diagram.png', 
            alt: 'Venn Diagram of Number System',
            position: 'below',
            width: 420,
            height: 320,
            zoom: null
        },
        Audio: null
    }
    
    const Lesson1 = {
        Type: 'Default',
        Header: 'Irrational Numbers',
        Text: {
            transition: "Next",
            text: [
                `<p><b>Irrational Numbers</b>, represented by <b>Q'</b> or <b>"Q Prime"</b>, are numbers that <i>cannot be written as a fraction</i>.`,
                {
                    Example: 'Math',
                    Content: 'ùúã = 3.14159265‚Ä¶,\\ \\sqrt{2} = 1.313213...,\\ e = 2.718281...'
                },
                "<p>Irrational numbers are essentially the opposite of rational numbers, commonly referred to as a ‚Äúcontradiction‚Äù.</p>",
                {
                    Example: 'Note',
                    Content: "<p>Note:</p> Irrational numbers have decimals that never stop at any point!",
                    Image: {
                        url: "https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/decimal.gif",
                        alt: 'stop',
                        position: 'below',
                        width: 200,
                        zoom: null
                    },
                },
                "<p>Irrational numbers are crucial. You‚Äôve probably seen photos of amazing structures that have used irrational numbers without even realizing it.</p>",
                "<img src=https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/colosseum.png width='300' style='border-radius: 20px; padding-top: 10px;' alt={alt}/><p>Without the number ùúã , architects would have been unable to construct the cylindrical shape of the colosseum,</p>",
                "<img src=https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/eiffel-tower.png width='300' style='border-radius: 20px; padding-top: 10px;' alt={alt}/><p>and without the irrational square root, they would not have been able to form the many triangular beams that make up the Eiffel Tower.</p>",
                "<img src=https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/hard-drive.png width='300' style='border-radius: 20px; padding-top: 10px;' alt={alt}/><p>The irrational number ùúã was also used to create the circular disk inside the hard drive of the computer you‚Äôre using to read this right now!</p>"

            ]
        },
        Image: null,
        Audio: null
    }

    const MC = {
        Type: 'Multiple Choice',
        Header: null,
        Question: 'Which of the following contexts would use irrational numbers?',
        Options: [
            "A",
            "B",
            "C",
            "D"
        ],
        Answer: "D",
        Image: { 
            url: 'https://wizroboticsintro.s3.us-east-2.amazonaws.com/Curriculum/CWE/MPM1D/MPM1D-U1/IrrationalNumbers/U1_L7_MC1.png', 
            alt: 'questions',
            position: 'above',
            width: '40vw',
            zoom: null
        },
        Audio: null // optional
    };
    
    const Ending = {
        Type: 'Default',
        Header: 'Congrats! You made it to the end!',
        Text: null,
        Audio: null
    }
    
    // place objects in order of appearance
    const ComponentArray = [ Intro, Lesson1, MC, Ending ];

    return (
        <MakePage componentArray={ComponentArray} />
    );
}

export default MakeComponent;



